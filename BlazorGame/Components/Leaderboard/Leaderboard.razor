@rendermode InteractiveServer
@using BlazorGame.Data
@using Microsoft.EntityFrameworkCore
@inject IDbContextFactory<AppDbContext> DbFactory

<div class="bounding-box">
    <h3 class="leaderboard-title">Leaderboard</h3>
    <ol>
        @foreach (var user in _scores)
        {
            <li>@user.Username @user.Score</li>
        }
    </ol>
</div>

@code {

    private class User(string username, int score)
    {
        public string Username = username;
        public int Score = score;
    }

    private Timer? _timer;
    const int NumberOfElements = 10;
    private List<User> _scores = [];

    protected override void OnInitialized()
    {
        _timer = new Timer(_ =>
        {
            Task.Run(UpdateLeaderboard);

        }, null, 0, 60000);

        base.OnInitialized();
    }

    private async Task UpdateLeaderboard()
    {
        var appDbContext = await DbFactory.CreateDbContextAsync();
        _scores = await appDbContext.Users
            .OrderByDescending(user => user.BestScore)
            .Take(NumberOfElements)
            .Select(user => new User(user.Username, user.BestScore))
            .ToListAsync();
        await InvokeAsync(StateHasChanged);
    }

}